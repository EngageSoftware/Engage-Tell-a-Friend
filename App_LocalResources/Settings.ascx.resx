<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlindCarbonCopyInvalid.Text" xml:space="preserve">
    <value>&lt;span class='error'&gt;Please enter a valid e-mail addresses.&lt;/span&gt;</value>
  </data>
  <data name="BlindCarbonCopyLabel.Help" xml:space="preserve">
    <value>Enter email addresses to be used in the BCC (blind carbon copy) section of the email.  If you do not want to have any BCC recipients, leave this field blank.  You can enter multiple email addresses separated by commas.  BCC recipients will receive the email, but their email address will not be included for any recipients to see.</value>
  </data>
  <data name="BlindCarbonCopyLabel.Text" xml:space="preserve">
    <value>BCC recipients:</value>
  </data>
  <data name="CarbonCopyInvalid.Text" xml:space="preserve">
    <value>&lt;span class='error'&gt;Please enter valid e-mail addresses.&lt;/span&gt;</value>
  </data>
  <data name="CarbonCopyLabel.Help" xml:space="preserve">
    <value>Enter email addresses to be used in the CC (carbon copy) section of the email.  If you do not want to have any CC recipeients, leave this field blank.  You can enter multiple email addresses separated by commas.  CC recipients will receive the email and their address will appear to all recipients.</value>
  </data>
  <data name="CarbonCopyLabel.Text" xml:space="preserve">
    <value>CC recipients:</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Engage: Tell-A-Friend Settings</value>
  </data>
  <data name="ShowMessageLabel.Help" xml:space="preserve">
    <value>Optionally, you can choose to allow users to send a custom message to their friends. Check this box if you would like to allow the addition of custom messages to the Tell A Friend module.</value>
  </data>
  <data name="ShowMessageLabel.Text" xml:space="preserve">
    <value>Allow Custom Message?</value>
  </data>
  <data name="ShowModalLabel.Help" xml:space="preserve">
    <value>Tell A Friend allows you to display the form in either a modal popup or as a normal contact form. Check this option to display the form in a modal popup.</value>
  </data>
  <data name="ShowModalLabel.Text" xml:space="preserve">
    <value>Show in Modal Window?</value>
  </data>
  <data name="SiteUrlLabel.Help" xml:space="preserve">
    <value>Enter the URL that you would like this module to use.  (e.g. http://www.yoursite.com). When a user sends their friend an email they will be directed to visit this URL.  Leave blank to use the current page's URL</value>
  </data>
  <data name="SiteUrlLabel.Text" xml:space="preserve">
    <value>Use a specific URL:</value>
  </data>
</root>